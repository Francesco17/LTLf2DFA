Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> ltl
Rule 1     ltl -> expression
Rule 2     ltl -> empty
Rule 3     expression -> LPAR expression UNTIL expression RPAR
Rule 4     expression -> LPAR expression AND expression RPAR
Rule 5     expression -> LPAR expression OR expression RPAR
Rule 6     expression -> LPAR expression IMPLIES expression RPAR
Rule 7     expression -> LPAR expression DIMPLIES expression RPAR
Rule 8     expression -> expression UNTIL expression
Rule 9     expression -> expression AND expression
Rule 10    expression -> expression OR expression
Rule 11    expression -> expression IMPLIES expression
Rule 12    expression -> expression DIMPLIES expression
Rule 13    expression -> NOT expression
Rule 14    expression -> NEXT expression
Rule 15    expression -> ATOM
Rule 16    empty -> <empty>

Terminals, with rules where they appear

AND                  : 4 9
ATOM                 : 15
DIMPLIES             : 7 12
IMPLIES              : 6 11
LPAR                 : 3 4 5 6 7
NEXT                 : 14
NOT                  : 13
OR                   : 5 10
RPAR                 : 3 4 5 6 7
UNTIL                : 3 8
error                : 

Nonterminals, with rules where they appear

empty                : 2
expression           : 1 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 14
ltl                  : 0

Parsing method: LALR

state 0

    (0) S' -> . ltl
    (1) ltl -> . expression
    (2) ltl -> . empty
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM
    (16) empty -> .

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7
    $end            reduce using rule 16 (empty -> .)

    ltl                            shift and go to state 1
    expression                     shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> ltl .



state 2

    (1) ltl -> expression .
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

    $end            reduce using rule 1 (ltl -> expression .)
    UNTIL           shift and go to state 8
    AND             shift and go to state 9
    OR              shift and go to state 10
    IMPLIES         shift and go to state 11
    DIMPLIES        shift and go to state 12


state 3

    (2) ltl -> empty .

    $end            reduce using rule 2 (ltl -> empty .)


state 4

    (3) expression -> LPAR . expression UNTIL expression RPAR
    (4) expression -> LPAR . expression AND expression RPAR
    (5) expression -> LPAR . expression OR expression RPAR
    (6) expression -> LPAR . expression IMPLIES expression RPAR
    (7) expression -> LPAR . expression DIMPLIES expression RPAR
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7

    expression                     shift and go to state 13

state 5

    (13) expression -> NOT . expression
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7

    expression                     shift and go to state 14

state 6

    (14) expression -> NEXT . expression
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7

    expression                     shift and go to state 15

state 7

    (15) expression -> ATOM .

    UNTIL           reduce using rule 15 (expression -> ATOM .)
    AND             reduce using rule 15 (expression -> ATOM .)
    OR              reduce using rule 15 (expression -> ATOM .)
    IMPLIES         reduce using rule 15 (expression -> ATOM .)
    DIMPLIES        reduce using rule 15 (expression -> ATOM .)
    $end            reduce using rule 15 (expression -> ATOM .)
    RPAR            reduce using rule 15 (expression -> ATOM .)


state 8

    (8) expression -> expression UNTIL . expression
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7

    expression                     shift and go to state 16

state 9

    (9) expression -> expression AND . expression
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7

    expression                     shift and go to state 17

state 10

    (10) expression -> expression OR . expression
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7

    expression                     shift and go to state 18

state 11

    (11) expression -> expression IMPLIES . expression
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7

    expression                     shift and go to state 19

state 12

    (12) expression -> expression DIMPLIES . expression
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7

    expression                     shift and go to state 20

state 13

    (3) expression -> LPAR expression . UNTIL expression RPAR
    (4) expression -> LPAR expression . AND expression RPAR
    (5) expression -> LPAR expression . OR expression RPAR
    (6) expression -> LPAR expression . IMPLIES expression RPAR
    (7) expression -> LPAR expression . DIMPLIES expression RPAR
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

    UNTIL           shift and go to state 21
    AND             shift and go to state 22
    OR              shift and go to state 23
    IMPLIES         shift and go to state 24
    DIMPLIES        shift and go to state 25


state 14

    (13) expression -> NOT expression .
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

    DIMPLIES        reduce using rule 13 (expression -> NOT expression .)
    $end            reduce using rule 13 (expression -> NOT expression .)
    RPAR            reduce using rule 13 (expression -> NOT expression .)
    UNTIL           shift and go to state 8
    AND             shift and go to state 9
    OR              shift and go to state 10
    IMPLIES         shift and go to state 11

  ! UNTIL           [ reduce using rule 13 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 13 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 13 (expression -> NOT expression .) ]
  ! IMPLIES         [ reduce using rule 13 (expression -> NOT expression .) ]
  ! DIMPLIES        [ shift and go to state 12 ]


state 15

    (14) expression -> NEXT expression .
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

    DIMPLIES        reduce using rule 14 (expression -> NEXT expression .)
    $end            reduce using rule 14 (expression -> NEXT expression .)
    RPAR            reduce using rule 14 (expression -> NEXT expression .)
    UNTIL           shift and go to state 8
    AND             shift and go to state 9
    OR              shift and go to state 10
    IMPLIES         shift and go to state 11

  ! UNTIL           [ reduce using rule 14 (expression -> NEXT expression .) ]
  ! AND             [ reduce using rule 14 (expression -> NEXT expression .) ]
  ! OR              [ reduce using rule 14 (expression -> NEXT expression .) ]
  ! IMPLIES         [ reduce using rule 14 (expression -> NEXT expression .) ]
  ! DIMPLIES        [ shift and go to state 12 ]


state 16

    (8) expression -> expression UNTIL expression .
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

    UNTIL           reduce using rule 8 (expression -> expression UNTIL expression .)
    AND             reduce using rule 8 (expression -> expression UNTIL expression .)
    DIMPLIES        reduce using rule 8 (expression -> expression UNTIL expression .)
    $end            reduce using rule 8 (expression -> expression UNTIL expression .)
    RPAR            reduce using rule 8 (expression -> expression UNTIL expression .)
    OR              shift and go to state 10
    IMPLIES         shift and go to state 11

  ! OR              [ reduce using rule 8 (expression -> expression UNTIL expression .) ]
  ! IMPLIES         [ reduce using rule 8 (expression -> expression UNTIL expression .) ]
  ! UNTIL           [ shift and go to state 8 ]
  ! AND             [ shift and go to state 9 ]
  ! DIMPLIES        [ shift and go to state 12 ]


state 17

    (9) expression -> expression AND expression .
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

    UNTIL           reduce using rule 9 (expression -> expression AND expression .)
    AND             reduce using rule 9 (expression -> expression AND expression .)
    DIMPLIES        reduce using rule 9 (expression -> expression AND expression .)
    $end            reduce using rule 9 (expression -> expression AND expression .)
    RPAR            reduce using rule 9 (expression -> expression AND expression .)
    OR              shift and go to state 10
    IMPLIES         shift and go to state 11

  ! OR              [ reduce using rule 9 (expression -> expression AND expression .) ]
  ! IMPLIES         [ reduce using rule 9 (expression -> expression AND expression .) ]
  ! UNTIL           [ shift and go to state 8 ]
  ! AND             [ shift and go to state 9 ]
  ! DIMPLIES        [ shift and go to state 12 ]


state 18

    (10) expression -> expression OR expression .
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

    UNTIL           reduce using rule 10 (expression -> expression OR expression .)
    AND             reduce using rule 10 (expression -> expression OR expression .)
    OR              reduce using rule 10 (expression -> expression OR expression .)
    IMPLIES         reduce using rule 10 (expression -> expression OR expression .)
    DIMPLIES        reduce using rule 10 (expression -> expression OR expression .)
    $end            reduce using rule 10 (expression -> expression OR expression .)
    RPAR            reduce using rule 10 (expression -> expression OR expression .)

  ! UNTIL           [ shift and go to state 8 ]
  ! AND             [ shift and go to state 9 ]
  ! OR              [ shift and go to state 10 ]
  ! IMPLIES         [ shift and go to state 11 ]
  ! DIMPLIES        [ shift and go to state 12 ]


state 19

    (11) expression -> expression IMPLIES expression .
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

    UNTIL           reduce using rule 11 (expression -> expression IMPLIES expression .)
    AND             reduce using rule 11 (expression -> expression IMPLIES expression .)
    OR              reduce using rule 11 (expression -> expression IMPLIES expression .)
    IMPLIES         reduce using rule 11 (expression -> expression IMPLIES expression .)
    DIMPLIES        reduce using rule 11 (expression -> expression IMPLIES expression .)
    $end            reduce using rule 11 (expression -> expression IMPLIES expression .)
    RPAR            reduce using rule 11 (expression -> expression IMPLIES expression .)

  ! UNTIL           [ shift and go to state 8 ]
  ! AND             [ shift and go to state 9 ]
  ! OR              [ shift and go to state 10 ]
  ! IMPLIES         [ shift and go to state 11 ]
  ! DIMPLIES        [ shift and go to state 12 ]


state 20

    (12) expression -> expression DIMPLIES expression .
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for DIMPLIES resolved as shift
    $end            reduce using rule 12 (expression -> expression DIMPLIES expression .)
    RPAR            reduce using rule 12 (expression -> expression DIMPLIES expression .)
    UNTIL           shift and go to state 8
    AND             shift and go to state 9
    OR              shift and go to state 10
    IMPLIES         shift and go to state 11
    DIMPLIES        shift and go to state 12

  ! UNTIL           [ reduce using rule 12 (expression -> expression DIMPLIES expression .) ]
  ! AND             [ reduce using rule 12 (expression -> expression DIMPLIES expression .) ]
  ! OR              [ reduce using rule 12 (expression -> expression DIMPLIES expression .) ]
  ! IMPLIES         [ reduce using rule 12 (expression -> expression DIMPLIES expression .) ]
  ! DIMPLIES        [ reduce using rule 12 (expression -> expression DIMPLIES expression .) ]


state 21

    (3) expression -> LPAR expression UNTIL . expression RPAR
    (8) expression -> expression UNTIL . expression
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7

    expression                     shift and go to state 26

state 22

    (4) expression -> LPAR expression AND . expression RPAR
    (9) expression -> expression AND . expression
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7

    expression                     shift and go to state 27

state 23

    (5) expression -> LPAR expression OR . expression RPAR
    (10) expression -> expression OR . expression
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7

    expression                     shift and go to state 28

state 24

    (6) expression -> LPAR expression IMPLIES . expression RPAR
    (11) expression -> expression IMPLIES . expression
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7

    expression                     shift and go to state 29

state 25

    (7) expression -> LPAR expression DIMPLIES . expression RPAR
    (12) expression -> expression DIMPLIES . expression
    (3) expression -> . LPAR expression UNTIL expression RPAR
    (4) expression -> . LPAR expression AND expression RPAR
    (5) expression -> . LPAR expression OR expression RPAR
    (6) expression -> . LPAR expression IMPLIES expression RPAR
    (7) expression -> . LPAR expression DIMPLIES expression RPAR
    (8) expression -> . expression UNTIL expression
    (9) expression -> . expression AND expression
    (10) expression -> . expression OR expression
    (11) expression -> . expression IMPLIES expression
    (12) expression -> . expression DIMPLIES expression
    (13) expression -> . NOT expression
    (14) expression -> . NEXT expression
    (15) expression -> . ATOM

    LPAR            shift and go to state 4
    NOT             shift and go to state 5
    NEXT            shift and go to state 6
    ATOM            shift and go to state 7

    expression                     shift and go to state 30

state 26

    (3) expression -> LPAR expression UNTIL expression . RPAR
    (8) expression -> expression UNTIL expression .
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

    RPAR            shift and go to state 31
    UNTIL           reduce using rule 8 (expression -> expression UNTIL expression .)
    AND             reduce using rule 8 (expression -> expression UNTIL expression .)
    DIMPLIES        reduce using rule 8 (expression -> expression UNTIL expression .)
    OR              shift and go to state 10
    IMPLIES         shift and go to state 11

  ! OR              [ reduce using rule 8 (expression -> expression UNTIL expression .) ]
  ! IMPLIES         [ reduce using rule 8 (expression -> expression UNTIL expression .) ]
  ! UNTIL           [ shift and go to state 8 ]
  ! AND             [ shift and go to state 9 ]
  ! DIMPLIES        [ shift and go to state 12 ]


state 27

    (4) expression -> LPAR expression AND expression . RPAR
    (9) expression -> expression AND expression .
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

    RPAR            shift and go to state 32
    UNTIL           reduce using rule 9 (expression -> expression AND expression .)
    AND             reduce using rule 9 (expression -> expression AND expression .)
    DIMPLIES        reduce using rule 9 (expression -> expression AND expression .)
    OR              shift and go to state 10
    IMPLIES         shift and go to state 11

  ! OR              [ reduce using rule 9 (expression -> expression AND expression .) ]
  ! IMPLIES         [ reduce using rule 9 (expression -> expression AND expression .) ]
  ! UNTIL           [ shift and go to state 8 ]
  ! AND             [ shift and go to state 9 ]
  ! DIMPLIES        [ shift and go to state 12 ]


state 28

    (5) expression -> LPAR expression OR expression . RPAR
    (10) expression -> expression OR expression .
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

    RPAR            shift and go to state 33
    UNTIL           reduce using rule 10 (expression -> expression OR expression .)
    AND             reduce using rule 10 (expression -> expression OR expression .)
    OR              reduce using rule 10 (expression -> expression OR expression .)
    IMPLIES         reduce using rule 10 (expression -> expression OR expression .)
    DIMPLIES        reduce using rule 10 (expression -> expression OR expression .)

  ! UNTIL           [ shift and go to state 8 ]
  ! AND             [ shift and go to state 9 ]
  ! OR              [ shift and go to state 10 ]
  ! IMPLIES         [ shift and go to state 11 ]
  ! DIMPLIES        [ shift and go to state 12 ]


state 29

    (6) expression -> LPAR expression IMPLIES expression . RPAR
    (11) expression -> expression IMPLIES expression .
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

    RPAR            shift and go to state 34
    UNTIL           reduce using rule 11 (expression -> expression IMPLIES expression .)
    AND             reduce using rule 11 (expression -> expression IMPLIES expression .)
    OR              reduce using rule 11 (expression -> expression IMPLIES expression .)
    IMPLIES         reduce using rule 11 (expression -> expression IMPLIES expression .)
    DIMPLIES        reduce using rule 11 (expression -> expression IMPLIES expression .)

  ! UNTIL           [ shift and go to state 8 ]
  ! AND             [ shift and go to state 9 ]
  ! OR              [ shift and go to state 10 ]
  ! IMPLIES         [ shift and go to state 11 ]
  ! DIMPLIES        [ shift and go to state 12 ]


state 30

    (7) expression -> LPAR expression DIMPLIES expression . RPAR
    (12) expression -> expression DIMPLIES expression .
    (8) expression -> expression . UNTIL expression
    (9) expression -> expression . AND expression
    (10) expression -> expression . OR expression
    (11) expression -> expression . IMPLIES expression
    (12) expression -> expression . DIMPLIES expression

  ! shift/reduce conflict for UNTIL resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IMPLIES resolved as shift
  ! shift/reduce conflict for DIMPLIES resolved as shift
    RPAR            shift and go to state 35
    UNTIL           shift and go to state 8
    AND             shift and go to state 9
    OR              shift and go to state 10
    IMPLIES         shift and go to state 11
    DIMPLIES        shift and go to state 12

  ! UNTIL           [ reduce using rule 12 (expression -> expression DIMPLIES expression .) ]
  ! AND             [ reduce using rule 12 (expression -> expression DIMPLIES expression .) ]
  ! OR              [ reduce using rule 12 (expression -> expression DIMPLIES expression .) ]
  ! IMPLIES         [ reduce using rule 12 (expression -> expression DIMPLIES expression .) ]
  ! DIMPLIES        [ reduce using rule 12 (expression -> expression DIMPLIES expression .) ]


state 31

    (3) expression -> LPAR expression UNTIL expression RPAR .

    UNTIL           reduce using rule 3 (expression -> LPAR expression UNTIL expression RPAR .)
    AND             reduce using rule 3 (expression -> LPAR expression UNTIL expression RPAR .)
    OR              reduce using rule 3 (expression -> LPAR expression UNTIL expression RPAR .)
    IMPLIES         reduce using rule 3 (expression -> LPAR expression UNTIL expression RPAR .)
    DIMPLIES        reduce using rule 3 (expression -> LPAR expression UNTIL expression RPAR .)
    $end            reduce using rule 3 (expression -> LPAR expression UNTIL expression RPAR .)
    RPAR            reduce using rule 3 (expression -> LPAR expression UNTIL expression RPAR .)


state 32

    (4) expression -> LPAR expression AND expression RPAR .

    UNTIL           reduce using rule 4 (expression -> LPAR expression AND expression RPAR .)
    AND             reduce using rule 4 (expression -> LPAR expression AND expression RPAR .)
    OR              reduce using rule 4 (expression -> LPAR expression AND expression RPAR .)
    IMPLIES         reduce using rule 4 (expression -> LPAR expression AND expression RPAR .)
    DIMPLIES        reduce using rule 4 (expression -> LPAR expression AND expression RPAR .)
    $end            reduce using rule 4 (expression -> LPAR expression AND expression RPAR .)
    RPAR            reduce using rule 4 (expression -> LPAR expression AND expression RPAR .)


state 33

    (5) expression -> LPAR expression OR expression RPAR .

    UNTIL           reduce using rule 5 (expression -> LPAR expression OR expression RPAR .)
    AND             reduce using rule 5 (expression -> LPAR expression OR expression RPAR .)
    OR              reduce using rule 5 (expression -> LPAR expression OR expression RPAR .)
    IMPLIES         reduce using rule 5 (expression -> LPAR expression OR expression RPAR .)
    DIMPLIES        reduce using rule 5 (expression -> LPAR expression OR expression RPAR .)
    $end            reduce using rule 5 (expression -> LPAR expression OR expression RPAR .)
    RPAR            reduce using rule 5 (expression -> LPAR expression OR expression RPAR .)


state 34

    (6) expression -> LPAR expression IMPLIES expression RPAR .

    UNTIL           reduce using rule 6 (expression -> LPAR expression IMPLIES expression RPAR .)
    AND             reduce using rule 6 (expression -> LPAR expression IMPLIES expression RPAR .)
    OR              reduce using rule 6 (expression -> LPAR expression IMPLIES expression RPAR .)
    IMPLIES         reduce using rule 6 (expression -> LPAR expression IMPLIES expression RPAR .)
    DIMPLIES        reduce using rule 6 (expression -> LPAR expression IMPLIES expression RPAR .)
    $end            reduce using rule 6 (expression -> LPAR expression IMPLIES expression RPAR .)
    RPAR            reduce using rule 6 (expression -> LPAR expression IMPLIES expression RPAR .)


state 35

    (7) expression -> LPAR expression DIMPLIES expression RPAR .

    UNTIL           reduce using rule 7 (expression -> LPAR expression DIMPLIES expression RPAR .)
    AND             reduce using rule 7 (expression -> LPAR expression DIMPLIES expression RPAR .)
    OR              reduce using rule 7 (expression -> LPAR expression DIMPLIES expression RPAR .)
    IMPLIES         reduce using rule 7 (expression -> LPAR expression DIMPLIES expression RPAR .)
    DIMPLIES        reduce using rule 7 (expression -> LPAR expression DIMPLIES expression RPAR .)
    $end            reduce using rule 7 (expression -> LPAR expression DIMPLIES expression RPAR .)
    RPAR            reduce using rule 7 (expression -> LPAR expression DIMPLIES expression RPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for UNTIL in state 20 resolved as shift
WARNING: shift/reduce conflict for AND in state 20 resolved as shift
WARNING: shift/reduce conflict for OR in state 20 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 20 resolved as shift
WARNING: shift/reduce conflict for DIMPLIES in state 20 resolved as shift
WARNING: shift/reduce conflict for UNTIL in state 30 resolved as shift
WARNING: shift/reduce conflict for AND in state 30 resolved as shift
WARNING: shift/reduce conflict for OR in state 30 resolved as shift
WARNING: shift/reduce conflict for IMPLIES in state 30 resolved as shift
WARNING: shift/reduce conflict for DIMPLIES in state 30 resolved as shift
