
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORIMPLIESDIMPLIESrightNOTAND DIMPLIES EVENTUALLY FALSE GLOBALLY IMPLIES LPAR NEXT NOT OR RPAR TERM TRUE UNTIL\n    expression : TRUE\n               | FALSE\n               | TERM\n               | expression UNTIL expression\n               | expression AND expression\n               | expression OR expression\n               | expression IMPLIES expression\n               | expression DIMPLIES expression\n               | LPAR expression RPAR\n    \n    expression : NOT expression\n               | NOT LPAR expression RPAR\n    \n    expression : NEXT expression\n               | LPAR NEXT expression RPAR\n    \n    expression : EVENTUALLY expression\n               | LPAR EVENTUALLY expression RPAR\n    \n    expression : GLOBALLY expression\n               | LPAR GLOBALLY expression RPAR\n    \n    empty :\n    '
    
_lr_action_items = {'TRUE':([0,5,6,7,8,9,10,11,12,13,14,16,17,18,20,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'FALSE':([0,5,6,7,8,9,10,11,12,13,14,16,17,18,20,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'TERM':([0,5,6,7,8,9,10,11,12,13,14,16,17,18,20,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'LPAR':([0,5,6,7,8,9,10,11,12,13,14,16,17,18,20,],[5,5,20,5,5,5,5,5,5,5,5,5,5,5,5,]),'NOT':([0,5,6,7,8,9,10,11,12,13,14,16,17,18,20,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'NEXT':([0,5,6,7,8,9,10,11,12,13,14,16,17,18,20,],[7,16,7,7,7,7,7,7,7,7,7,7,7,7,16,]),'EVENTUALLY':([0,5,6,7,8,9,10,11,12,13,14,16,17,18,20,],[8,17,8,8,8,8,8,8,8,8,8,8,8,8,17,]),'GLOBALLY':([0,5,6,7,8,9,10,11,12,13,14,16,17,18,20,],[9,18,9,9,9,9,9,9,9,9,9,9,9,9,18,]),'$end':([1,2,3,4,19,21,22,23,24,25,26,27,28,29,34,35,36,37,],[0,-1,-2,-3,-10,-12,-14,-16,-4,-5,-6,-7,-8,-9,-13,-15,-17,-9,]),'UNTIL':([1,2,3,4,15,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[10,-1,-2,-3,10,-10,10,10,10,10,-5,-6,-7,-8,-9,10,10,10,10,-13,-15,-17,-9,]),'AND':([1,2,3,4,15,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[11,-1,-2,-3,11,-10,11,11,11,11,-5,-6,-7,-8,-9,11,11,11,11,-13,-15,-17,-9,]),'OR':([1,2,3,4,15,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[12,-1,-2,-3,12,-10,12,12,12,12,-5,-6,-7,-8,-9,12,12,12,12,-13,-15,-17,-9,]),'IMPLIES':([1,2,3,4,15,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[13,-1,-2,-3,13,-10,13,13,13,13,-5,-6,-7,-8,-9,13,13,13,13,-13,-15,-17,-9,]),'DIMPLIES':([1,2,3,4,15,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[14,-1,-2,-3,14,-10,14,14,14,14,-5,-6,-7,-8,-9,14,14,14,14,-13,-15,-17,-9,]),'RPAR':([2,3,4,15,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,],[-1,-2,-3,29,-10,-12,-14,-16,-4,-5,-6,-7,-8,-9,34,35,36,37,-13,-15,-17,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,5,6,7,8,9,10,11,12,13,14,16,17,18,20,],[1,15,19,21,22,23,24,25,26,27,28,30,31,32,33,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> TRUE','expression',1,'p_expression','ltl_parser.py',80),
  ('expression -> FALSE','expression',1,'p_expression','ltl_parser.py',81),
  ('expression -> TERM','expression',1,'p_expression','ltl_parser.py',82),
  ('expression -> expression UNTIL expression','expression',3,'p_expression','ltl_parser.py',83),
  ('expression -> expression AND expression','expression',3,'p_expression','ltl_parser.py',84),
  ('expression -> expression OR expression','expression',3,'p_expression','ltl_parser.py',85),
  ('expression -> expression IMPLIES expression','expression',3,'p_expression','ltl_parser.py',86),
  ('expression -> expression DIMPLIES expression','expression',3,'p_expression','ltl_parser.py',87),
  ('expression -> LPAR expression RPAR','expression',3,'p_expression','ltl_parser.py',88),
  ('expression -> NOT expression','expression',2,'p_expression_not','ltl_parser.py',107),
  ('expression -> NOT LPAR expression RPAR','expression',4,'p_expression_not','ltl_parser.py',108),
  ('expression -> NEXT expression','expression',2,'p_expression_next','ltl_parser.py',118),
  ('expression -> LPAR NEXT expression RPAR','expression',4,'p_expression_next','ltl_parser.py',119),
  ('expression -> EVENTUALLY expression','expression',2,'p_expression_eventually','ltl_parser.py',128),
  ('expression -> LPAR EVENTUALLY expression RPAR','expression',4,'p_expression_eventually','ltl_parser.py',129),
  ('expression -> GLOBALLY expression','expression',2,'p_expression_globally','ltl_parser.py',138),
  ('expression -> LPAR GLOBALLY expression RPAR','expression',4,'p_expression_globally','ltl_parser.py',139),
  ('empty -> <empty>','empty',0,'p_empty','ltl_parser.py',151),
]
